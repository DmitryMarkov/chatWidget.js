!function(e){var t={};function n(i){if(t[i])return t[i].exports;var a=t[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(i,a,function(t){return e[t]}.bind(null,a));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=4)}([function(e,t,n){"use strict";var i=Object.prototype.hasOwnProperty;function a(e,t){return Array.isArray(e)?function(e,t){for(var n,i="",s="",r=Array.isArray(t),o=0;o<e.length;o++)(n=a(e[o]))&&(r&&t[o]&&(n=u(n)),i=i+s+n,s=" ");return i}(e,t):e&&"object"==typeof e?function(e){var t="",n="";for(var a in e)a&&e[a]&&i.call(e,a)&&(t=t+n+a,n=" ");return t}(e):e||""}function s(e){if(!e)return"";if("object"==typeof e){var t="";for(var n in e)i.call(e,n)&&(t=t+n+":"+e[n]+";");return t}return e+""}function r(e,t,n,i){return!1!==t&&null!=t&&(t||"class"!==e&&"style"!==e)?!0===t?" "+(i?e:e+'="'+e+'"'):("function"==typeof t.toJSON&&(t=t.toJSON()),"string"==typeof t||(t=JSON.stringify(t),n||-1===t.indexOf('"'))?(n&&(t=u(t))," "+e+'="'+t+'"'):" "+e+"='"+t.replace(/'/g,"&#39;")+"'"):""}t.merge=function e(t,n){if(1===arguments.length){for(var i=t[0],a=1;a<t.length;a++)i=e(i,t[a]);return i}for(var r in n)if("class"===r){var o=t[r]||[];t[r]=(Array.isArray(o)?o:[o]).concat(n[r]||[])}else if("style"===r){var o=s(t[r]);o=o&&";"!==o[o.length-1]?o+";":o;var u=s(n[r]);u=u&&";"!==u[u.length-1]?u+";":u,t[r]=o+u}else t[r]=n[r];return t},t.classes=a,t.style=s,t.attr=r,t.attrs=function(e,t){var n="";for(var o in e)if(i.call(e,o)){var u=e[o];if("class"===o){u=a(u),n=r(o,u,!1,t)+n;continue}"style"===o&&(u=s(u)),n+=r(o,u,!1,t)}return n};var o=/["&<>]/;function u(e){var t=""+e,n=o.exec(t);if(!n)return e;var i,a,s,r="";for(i=n.index,a=0;i<t.length;i++){switch(t.charCodeAt(i)){case 34:s="&quot;";break;case 38:s="&amp;";break;case 60:s="&lt;";break;case 62:s="&gt;";break;default:continue}a!==i&&(r+=t.substring(a,i)),a=i+1,r+=s}return a!==i?r+t.substring(a,i):r}t.escape=u,t.rethrow=function e(t,i,a,s){if(!(t instanceof Error))throw t;if(!("undefined"==typeof window&&i||s))throw t.message+=" on line "+a,t;try{s=s||n(7).readFileSync(i,"utf8")}catch(n){e(t,null,a)}var r=3,o=s.split("\n"),u=Math.max(a-r,0),l=Math.min(o.length,a+r);var r=o.slice(u,l).map(function(e,t){var n=t+u+1;return(n==a?"  > ":"    ")+n+"| "+e}).join("\n");t.path=i;t.message=(i||"Pug")+":"+a+"\n"+r+"\n\n"+t.message;throw t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getRandomNumber=function(e){return Math.round(Math.random()*(e-1))},t.formatDate=function(e){var t=new Date(e);return t.getHours()+":"+t.getMinutes()},t.deepEqual=function(e,t){return JSON.stringify(e)===JSON.stringify(t)}},function(e,t,n){var i=n(0);e.exports=function(e){var t,n="",a=e||{};return function(e,a,s){(function(){var r=a;if("number"==typeof r.length)for(var o=0,u=r.length;o<u;o++){var l=r[o];n=n+"<div"+i.attr("class",i.classes(["chat__message",l.name===s?"chat__message-my":""],[!1,!0]),!1,!0)+'><div class="message__time">'+i.escape(null==(t=l.name===s?"":l.name)?"":t)+"</div><div>"+i.escape(null==(t=l.text)?"":t)+'</div><div class="message__time float-right">'+i.escape(null==(t=e(l.date))?"":t)+"</div></div>"}else for(var o in u=0,r)u++,l=r[o],n=n+"<div"+i.attr("class",i.classes(["chat__message",l.name===s?"chat__message-my":""],[!1,!0]),!1,!0)+'><div class="message__time">'+i.escape(null==(t=l.name===s?"":l.name)?"":t)+"</div><div>"+i.escape(null==(t=l.text)?"":t)+'</div><div class="message__time float-right">'+i.escape(null==(t=e(l.date))?"":t)+"</div></div>"}).call(this)}.call(this,"formatDate"in a?a.formatDate:"undefined"!=typeof formatDate?formatDate:void 0,"messages"in a?a.messages:"undefined"!=typeof messages?messages:void 0,"username"in a?a.username:"undefined"!=typeof username?username:void 0),n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.storeService={getItem:function(e){return localStorage.getItem(e)||""},setItem:function(e,t){localStorage.setItem(e,t)},remove:function(e){localStorage.removeItem(e)},getJSON:function(e){return JSON.parse(localStorage.getItem(e)||"[]")},setJSON:function(e,t){localStorage.setItem(e,JSON.stringify(t))}}},function(e,t,n){"use strict";var i,a=n(5);new((i=a)&&i.__esModule?i:{default:i}).default({el:".chat",buttonEl:".website",isOpenedOnStart:!0})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=m(n(6)),s=m(n(8)),r=m(n(9)),o=m(n(10)),u=m(n(11)),l=m(n(13)),c=m(n(15)),f=m(n(16)),h=m(n(17)),d=n(3),g=n(1),v=m(n(18));function m(e){return e&&e.__esModule?e:{default:e}}function p(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}var y=function(){function e(t){var n=t.el,i=t.buttonEl,a=t.isOpenedOnStart;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.el=document.querySelector(n),this.buttonEl=document.querySelector(i),this.isOpenedOnStart=a,this._initToggleButton(),this._init()}return i(e,[{key:"render",value:function(){var e=this;this.el.innerHTML=(0,a.default)({messages:this.messages,username:this.userName,formatDate:g.formatDate}),this.isOpenedOnStart||this._onToggle(),[].concat(p(this.el.querySelectorAll(".header__name a"))).forEach(function(t){t.dataset.action===e.chatGroup&&t.classList.add("active")})}},{key:"_init",value:function(){var e=this;this.userName=d.storeService.getItem("chatWidgetName"),this.chatGroup=d.storeService.getItem("chatWidgetGroup")||"botik",this._initServices(),this.messageService.getMessageList().then(function(t){e.messages=t,e.render(),e.userName?(e._initComponents(),e._initEvents()):e._initLoginComponent(),"botik"!==e.chatGroup&&e.startPolling()})}},{key:"_initServices",value:function(){this.messageService=new s.default({baseUrl:"https://components-1601-1930.firebaseio.com/chat/messages.json",chatGroup:this.chatGroup}),this.audioService=new r.default,this.botikService=new o.default}},{key:"_initToggleButton",value:function(){this.chatButton=new u.default({el:document.createElement("div"),parentEl:this.buttonEl,isOpenedOnStart:this.isOpenedOnStart,EventMixin:v.default}),this.chatButton.on("toggle",this._onToggle.bind(this))}},{key:"_initLoginComponent",value:function(){this.loginForm=new l.default({el:document.createElement("div"),EventMixin:v.default}),this.el.appendChild(this.loginForm.el),this.el.querySelector(".chat__login-button").addEventListener("click",this.loginForm.toggleModal),this.loginForm.on("login",this._onLogin.bind(this))}},{key:"_initComponents",value:function(){this.messageForm=new f.default({el:this.el.querySelector(".chat__form"),EventMixin:v.default}),this.messageList=new c.default({el:this.el.querySelector(".chat__body"),username:this.userName,messages:this.messages,messageService:this.messageService}),this.botik=new h.default({audioService:this.audioService,messageList:this.messageList,botikService:this.botikService})}},{key:"_initEvents",value:function(){this.el.querySelector(".header__name").addEventListener("click",this._changeGroup.bind(this)),this.messageForm.on("message",this._onMessage.bind(this))}},{key:"_changeGroup",value:function(e){e.preventDefault();var t=e.target.closest("[data-action]");null===t||t.classList.contains("active")||([].concat(p(t.parentNode.children)).forEach(function(e){e.classList.toggle("active")}),d.storeService.setItem("chatWidgetGroup",t.dataset.action),this.chatGroup=t.dataset.action,"botik"===this.chatGroup&&this.stopPolling(),this._init())}},{key:"_onLogin",value:function(e){this.userName=e.detail.username,d.storeService.setItem("chatWidgetName",this.userName),this.el.querySelector(".login-false").classList.toggle("hidden"),this.el.querySelector(".login-true").classList.toggle("hidden"),this._initComponents(),this._initEvents(),!this.messages.length&&this.userName&&this.botik.answer("Привет, "+this.userName+"!")}},{key:"_onMessage",value:function(e){this.messageList.addMessage({text:e.detail.text,name:this.userName}),this.messageList.render(),"botik"===this.chatGroup&&this.botik.answer(),this.audioService.play("send_message")}},{key:"_onToggle",value:function(){this.el.classList.toggle("column-25"),this.el.classList.toggle("column-0")}},{key:"startPolling",value:function(){var e=this;this.__pollingID=setInterval(function(){console.log("polling..."),e.messageService.getMessageList().then(function(t){(0,g.deepEqual)(e.messageList.getLocalMessages(),t)||(console.log("ch-ch-changes!"),e.messageList.setMessages(t),e.messageList.render(),e.messageList.getLocalMessages()[0].name!==e.userName&&e.audioService.play("receive_message"))})},4e3)}},{key:"stopPolling",value:function(){clearInterval(this.__pollingID)}}]),e}();t.default=y},function(e,t,n){var i=n(0);e.exports=function(e){var t,a="",s=e||{};return function(s){a=a+'<div class="column-center chat__app"><div'+i.attr("class",i.classes(["login-false",s?"hidden":""],[!1,!0]),!1,!0)+'><button class="button-primary chat__login-button">Join chat</button></div><div'+i.attr("class",i.classes(["login-true",s?"":"hidden"],[!1,!0]),!1,!0)+'><div class="chat__header"><i class="fa fa-user-circle-o header__avatar"></i><p class="header__name">Chat with&nbsp;<a href="#" data-action="botik">Botik</a>&nbsp; | &nbsp;<a href="#" data-action="group">Group</a></p></div><div class="chat__body">'+(null==(t=n(2).call(this,e))?"":t)+'</div><div class="chat__footer"><form class="chat__form" name="chat__form"><textarea id="message" placeholder="Enter message..."></textarea></form></div></div></div>'}.call(this,"username"in s?s.username:"undefined"!=typeof username?username:void 0),a}},function(e,t){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=n(3);var s=function(){function e(t){var n=t.baseUrl,i=t.chatGroup;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=n,this.chatGroup=i}return i(e,[{key:"_request",value:function(){var e=this;return fetch(this.baseUrl).then(function(e){return e.json()}).then(function(e){return Object.values(e).reverse()}).catch(function(t){return console.log(t),a.storeService.getJSON("chatHistory-"+e.chatGroup)})}},{key:"getMessageList",value:function(){var e=this;return"botik"!==this.chatGroup?this._request():new Promise(function(t){t(a.storeService.getJSON("chatHistory-"+e.chatGroup))})}},{key:"saveMessages",value:function(e,t){"botik"!==this.chatGroup&&fetch(this.baseUrl,{method:"POST",body:JSON.stringify(t)}).then(function(e){console.log(e)}).catch(function(e){console.log(e)}),a.storeService.setJSON("chatHistory-"+this.chatGroup,e)}}]),e}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();var a=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.sounds={receive_message:new Audio("./chat/assets/sounds/notification.mp3"),send_message:new Audio("./chat/assets/sounds/sending.mp3")}}return i(e,[{key:"play",value:function(e){this.sounds[e].play()}}]),e}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();var a=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name="BotikService"}return i(e,[{key:"getRandomMessages",value:function(){return["Расскажи мне что-нибудь","Мне скучно","О чем ты думаешь?","Хочешь поговорить об этом?","Как ты провел свой день?","У тебя есть планы на завтрашний денёк?","Тебе нравится погода за окошком?","Во сколько ты проснулся?","Я тоже","Ага","И тебе","Хмм, интересненько..."]}}]),e}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i,a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),s=n(12),r=(i=s)&&i.__esModule?i:{default:i};var o=function(){function e(t){var n=t.el,i=t.parentEl,a=t.isOpenedOnStart,s=void 0===a||a,r=t.EventMixin;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r.apply(this),this.el=n,this.el.classList.add("show__button"),this.parentEl=i,this.isOpenedOnStart=s,this.render(),this.el.addEventListener("click",this.toggle.bind(this))}return a(e,[{key:"render",value:function(){this.el.innerHTML=(0,r.default)(),this.parentEl.appendChild(this.el),this.isOpenedOnStart||this._toggle(this.el.firstChild)}},{key:"toggle",value:function(e){e.preventDefault(),this._toggle(e.target.closest("[data-action]")),this.trigger("toggle")}},{key:"_toggle",value:function(e){e.firstChild.classList.toggle("fa-chevron-left"),e.firstChild.classList.toggle("fa-chevron-right")}}]),e}();t.default=o},function(e,t,n){n(0);e.exports=function(e){var t="";return t+='<button class="button button-black button__show-chat" data-action="toggle"><i class="fa fa-chevron-right"></i></button>'}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i,a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),s=n(14),r=(i=s)&&i.__esModule?i:{default:i};var o=function(){function e(t){var n=t.el,i=t.EventMixin;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i.apply(this),this.el=n,this.render(),this.toggleModal=this.toggleModal.bind(this),this._initEvents()}return a(e,[{key:"render",value:function(){this.el.innerHTML=(0,r.default)(),this.chatModal=this.el.querySelector(".modal__chat"),this.chatModalClose=this.el.querySelector(".modal__chat-close"),this.chatModalSubmit=this.el.querySelector(".chat-login")}},{key:"toggleModal",value:function(e){e.preventDefault(),this.chatModal.classList.toggle("not-visible")}},{key:"submitLoginForm",value:function(e){e.preventDefault(),this.trigger("login",{username:e.target.name.value}),this.toggleModal(e)}},{key:"_initEvents",value:function(){this.chatModalClose.addEventListener("click",this.toggleModal),this.chatModalSubmit.addEventListener("submit",this.submitLoginForm.bind(this))}}]),e}();t.default=o},function(e,t,n){n(0);e.exports=function(e){var t="";return t+='<div class="modal modal__chat not-visible"><div class="modal__body"><div class="modal__content"><form class="chat-login" name="chat-login"><fieldset><label for="name">Enter yo name</label><input id="name" type="text" placeholder="name" required autofocus></fieldset><button class="button-primary m-l-1 float-right" type="submit">Enter chat</button><button class="button-outline float-right modal__chat-close" type="button">Close</button></form></div></div></div>'}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i,a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),s=n(2),r=(i=s)&&i.__esModule?i:{default:i},o=n(1);var u=function(){function e(t){var n=t.el,i=t.username,a=t.messages,s=t.messageService;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.el=n,this.messageService=s,this.messages=a,this.username=i}return a(e,[{key:"render",value:function(){this.el.innerHTML=(0,r.default)({messages:this.messages,username:this.username,formatDate:o.formatDate})}},{key:"getLocalMessages",value:function(){return this.messages}},{key:"setMessages",value:function(e){this.messages=e}},{key:"addMessage",value:function(e){var t={text:e.text,name:e.name||this.username,date:Date.now()};this.messages.unshift(t),this.messageService.saveMessages(this.messages,t)}}]),e}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();var a=function(){function e(t){var n=t.el,i=t.EventMixin;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i.apply(this),this.el=n,this.messageTextarea=this.el.querySelector("#message"),this._initEvents()}return i(e,[{key:"reset",value:function(e){this.el.reset()}},{key:"submitMessageForm",value:function(e){13===e.charCode&&!1===e.shiftKey&&(e.preventDefault(),e.target.value.trim()&&(this.trigger("message",{text:e.target.value}),this.reset(e)))}},{key:"_initEvents",value:function(){this.messageTextarea.addEventListener("keypress",this.submitMessageForm.bind(this))}}]),e}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=n(1);var s=function(){function e(t){var n=t.audioService,i=t.messageList,a=t.botikService;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.answers=a.getRandomMessages(),this.messageList=i,this.audioService=n}return i(e,[{key:"answer",value:function(e){var t=this;setTimeout(function(){t.messageList.addMessage({text:e||t.answers[(0,a.getRandomNumber)(t.answers.length)],name:"botik"}),t.messageList.render(),t.audioService.play("receive_message")},1500)}}]),e}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){this.on=function(e,t){this.el.addEventListener(e,t)},this.trigger=function(e,t){var n=new CustomEvent(e,{detail:t});this.el.dispatchEvent(n)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,